con <- file(out_file, open = "wb")
on.exit(try(close(con), silent = TRUE), add = TRUE)
writeBin(charToRaw(enc2utf8(html)), con)
flush(con)
message("Wrote: ", out_file)
if (open_after) try(utils::browseURL(out_file), silent = TRUE)
invisible(out_file)
}
render_articles_page(
links,
out_file = "nathan_articles.html",
open_after = TRUE
)
gert::git_add(".") # stage everything
gert::git_commit("Update HTML") # commit staged files
gert::git_push(remote = "origin")
source("/home/nathan/Dropbox/901_functions/Custom header.R")
setwd("~/html_tests")
library(htmltools)
library(dplyr)
library(purrr)
library(stringr)
url <-
"https://docs.google.com/spreadsheets/d/1-MdK6rWC8nepp0fNUWNIrUs-e7JN9Z2z2w7oXzl4uuQ/edit?gid=0#gid=0"
links <- read_sheet(url, sheet = "links")
# --- helper (unchanged) -----------------------------------------------------
# tighter chips for TNF / Sunday / MNF
link_btn <- function(title, url) {
t <- tolower(trimws(title))
cls <- "btn"
if (t %in% c("tnf", "sunday", "mnf")) cls <- paste(cls, "btn-tight")
if (t %in% c("usage & production", "college usage & production"))
cls <- paste(cls, "btn-condensed btn-usagefix") # <-- add mobile-only shrink class
sprintf(
'<a class="%s" href="%s" target="_blank" rel="noopener">%s</a>',
cls,
url,
title
)
}
# --- renderer (updated CSS + wrapper) ---------------------------------------
render_articles_page <- function(
links,
out_file = "nathan_articles.html",
open_after = TRUE
) {
stopifnot(all(c("article", "url") %in% names(links)))
norm_key <- function(s) tolower(gsub("[^a-z0-9]", "", s))
alias_map <- c("5 to Add/Drop/Buy/Sell" = "5 5 5 5")
lk <- links
lk$.key <- norm_key(lk$article)
url_for <- function(display_title) {
actual <- if (display_title %in% names(alias_map))
alias_map[[display_title]] else display_title
k <- norm_key(actual)
hit <- lk[lk$.key == k, , drop = FALSE]
if (nrow(hit) == 0) return("#")
hit$url[[1]]
}
btn_for <- function(title) link_btn(title, url_for(title))
btn_row <- function(v) paste(vapply(v, btn_for, ""), collapse = " ")
# helper to fetch a URL by exact article title
url_for <- function(title) {
hit <- links$url[match(title, links$article)]
if (is.na(hit)) "#" else hit
}
cell_r1_c1 <- paste0(
'<div class="tnf-row">',
link_btn("TNF", url_for("TNF")),
link_btn("Sunday", url_for("Sunday")),
link_btn("MNF", url_for("MNF")),
'</div>'
)
cell_r1_c2 <- btn_for("Weekly")
cell_r1_c3 <- btn_for("Waivers")
cell_r2_c1 <- btn_for("Usage & Production")
cell_r2_c2 <- btn_for("Rest of Season")
cell_r2_c3 <- btn_for("5 to Add/Drop/Buy/Sell")
cell_r3_c1 <- btn_for("College Usage & Production")
cell_r3_c2 <- btn_for("Dynasty")
cell_r3_c3 <- btn_for("Start/Sit")
body_rows <- paste(
sprintf(
"<tr><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td></tr>",
cell_r1_c1,
cell_r1_c2,
cell_r1_c3
),
sprintf(
"<tr><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td></tr>",
cell_r2_c1,
cell_r2_c2,
cell_r2_c3
),
sprintf(
"<tr><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td></tr>",
cell_r3_c1,
cell_r3_c2,
cell_r3_c3
),
sep = "\n"
)
tpl <- paste0(
'<!doctype html>\n',
'<html lang="en">\n',
'<head>\n',
'  <meta charset="utf-8">\n',
'  <title>Explore Articles by Nathan Jahnke</title>\n',
'  <meta name="viewport" content="width=device-width, initial-scale=1">\n',
'  <link rel="preconnect" href="https://fonts.googleapis.com">\n',
'  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>\n',
'  <link href="https://fonts.googleapis.com/css2?family=Archivo:wght@400;600;700&display=swap" rel="stylesheet">\n',
'  <style>\n',
'    :root { --bg:#0b1530; --btn:#1677ff; --txt:#ffffff; }\n',
"    body, table { font-family: 'Archivo', sans-serif; }\n",
'    body { background: transparent; color: var(--txt); margin: 0; }\n',
'    .wrap { max-width: 1100px; margin: 28px auto; padding: 0 12px; }\n',
'    .card { background: var(--bg); border-radius: 16px; padding: 22px; ',
'            box-shadow: 0 10px 20px rgba(0,0,0,.20); overflow: hidden; }\n',
'    h1 { margin: 0 0 16px; font-weight: 700; text-align:center; }\n',
'    .grid { width: 100%%; border-collapse: separate; border-spacing: 12px 12px; table-layout: fixed; }\n',
'    .grid td { width: 33.33%%; text-align:center; }\n',
'    thead th { text-align: center; font-weight: 600; font-size: 18px; padding: 6px 2px 8px; }\n',
'    tbody td { vertical-align: top; }\n',
'    .cell { display:flex; justify-content:center; align-items:center; gap:10px; flex-wrap:wrap; }\n',
'    /* Centering container specifically for TNF/Sunday/MNF */\n',
'    .tnf-row { display:flex; justify-content:center; gap:8px; flex-wrap:wrap; width:100%%; }\n',
'    a.btn { display:inline-block; background:var(--btn); color:#fff; text-decoration:none; ',
'            padding:8px 12px; border-radius:12px; line-height:1.15; text-align:center; ',
'            box-shadow:0 2px 6px rgba(0,0,0,.25); transition:transform .05s ease-in-out; ',
'            max-width:100%%; word-break: normal; overflow-wrap: anywhere; font-size:16px; }\n',
'    a.btn-tight { padding:5px 9px; font-size:14px; border-radius:10px; white-space:nowrap; }\n',
'    a.btn-condensed { font-size:16px; }\n',
'    a.btn:hover { transform: translateY(-1px); }\n',
'    @media (max_width: 600px){\n', # <- keep your exact line; this shows intent
'      h1 { font-size:26px; }\n',
'      thead th { font-size:15px; }\n',
'      .grid { border-spacing: 10px 10px; }\n',
'      a.btn { font-size:12.5px; padding:6px 9px; border-radius:9px; }\n',
'      a.btn-tight { font-size:12px; padding:4px 7px; }\n',
'      a.btn-condensed { font-size:11.5px; padding:6px 8px; }\n',
"      a.btn-usagefix { font-size:10.4px; padding:5px 7px; }  /* NEW: nudge smaller */\n",
'      .tnf-row { justify-content:center; gap:6px; }\n',
'    }\n',
'  </style>\n',
'</head>\n',
'<body>\n',
'  <div class="wrap">\n',
'    <div class="card">\n',
'      <h1>Explore Articles by Nathan Jahnke</h1>\n',
'      <table class="grid">\n',
'        <thead>\n',
'          <tr><th>Recaps</th><th>Rankings</th><th>Looking Ahead</th></tr>\n',
'        </thead>\n',
'        <tbody>\n',
'          %s\n',
'        </tbody>\n',
'      </table>\n',
'    </div>\n',
'  </div>\n',
'</body>\n',
'</html>\n'
)
html <- sprintf(tpl, body_rows)
out_file <- normalizePath(out_file, winslash = "/", mustWork = FALSE)
dir.create(dirname(out_file), recursive = TRUE, showWarnings = FALSE)
con <- file(out_file, open = "wb")
on.exit(try(close(con), silent = TRUE), add = TRUE)
writeBin(charToRaw(enc2utf8(html)), con)
flush(con)
message("Wrote: ", out_file)
if (open_after) try(utils::browseURL(out_file), silent = TRUE)
invisible(out_file)
}
render_articles_page(
links,
out_file = "nathan_articles.html",
open_after = TRUE
)
gert::git_add(".") # stage everything
gert::git_commit("Update HTML") # commit staged files
gert::git_push(remote = "origin")
source("/home/nathan/Dropbox/901_functions/Custom header.R")
setwd("~/html_tests")
library(htmltools)
library(dplyr)
library(purrr)
library(stringr)
url <-
"https://docs.google.com/spreadsheets/d/1-MdK6rWC8nepp0fNUWNIrUs-e7JN9Z2z2w7oXzl4uuQ/edit?gid=0#gid=0"
links <- read_sheet(url, sheet = "links")
# --- helper (unchanged) -----------------------------------------------------
# tighter chips for TNF / Sunday / MNF
link_btn <- function(title, url) {
t <- tolower(trimws(title))
cls <- "btn"
if (t %in% c("tnf", "sunday", "mnf")) cls <- paste(cls, "btn-tight")
if (t %in% c("usage & production", "college usage & production"))
cls <- paste(cls, "btn-condensed")
sprintf(
'<a class="%s" href="%s" target="_blank" rel="noopener">%s</a>',
cls,
url,
title
)
}
# --- renderer (updated CSS + wrapper) ---------------------------------------
render_articles_page <- function(
links,
out_file = "nathan_articles.html",
open_after = TRUE
) {
stopifnot(all(c("article", "url") %in% names(links)))
norm_key <- function(s) tolower(gsub("[^a-z0-9]", "", s))
alias_map <- c("5 to Add/Drop/Buy/Sell" = "5 5 5 5")
lk <- links
lk$.key <- norm_key(lk$article)
url_for <- function(display_title) {
actual <- if (display_title %in% names(alias_map))
alias_map[[display_title]] else display_title
k <- norm_key(actual)
hit <- lk[lk$.key == k, , drop = FALSE]
if (nrow(hit) == 0) return("#")
hit$url[[1]]
}
btn_for <- function(title) link_btn(title, url_for(title))
btn_row <- function(v) paste(vapply(v, btn_for, ""), collapse = " ")
# helper to fetch a URL by exact article title
url_for <- function(title) {
hit <- links$url[match(title, links$article)]
if (is.na(hit)) "#" else hit
}
cell_r1_c1 <- paste0(
'<div class="tnf-row">',
link_btn("TNF", url_for("TNF")),
link_btn("Sunday", url_for("Sunday")),
link_btn("MNF", url_for("MNF")),
'</div>'
)
cell_r1_c2 <- btn_for("Weekly")
cell_r1_c3 <- btn_for("Waivers")
cell_r2_c1 <- btn_for("Usage & Production")
cell_r2_c2 <- btn_for("Rest of Season")
cell_r2_c3 <- btn_for("5 to Add/Drop/Buy/Sell")
cell_r3_c1 <- btn_for("College Usage & Production")
cell_r3_c2 <- btn_for("Dynasty")
cell_r3_c3 <- btn_for("Start/Sit")
body_rows <- paste(
sprintf(
"<tr><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td></tr>",
cell_r1_c1,
cell_r1_c2,
cell_r1_c3
),
sprintf(
"<tr><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td></tr>",
cell_r2_c1,
cell_r2_c2,
cell_r2_c3
),
sprintf(
"<tr><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td></tr>",
cell_r3_c1,
cell_r3_c2,
cell_r3_c3
),
sep = "\n"
)
tpl <- paste0(
'<!doctype html>\n',
'<html lang="en">\n',
'<head>\n',
'  <meta charset="utf-8">\n',
'  <title>Explore Articles by Nathan Jahnke</title>\n',
'  <meta name="viewport" content="width=device-width, initial-scale=1">\n',
'  <link rel="preconnect" href="https://fonts.googleapis.com">\n',
'  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>\n',
'  <link href="https://fonts.googleapis.com/css2?family=Archivo:wght@400;600;700&display=swap" rel="stylesheet">\n',
'  <style>\n',
'    :root { --bg:#0b1530; --btn:#1677ff; --txt:#ffffff; }\n',
"    body, table { font-family: 'Archivo', sans-serif; }\n",
'    body { background: transparent; color: var(--txt); margin: 0; }\n',
'    .wrap { max-width: 1100px; margin: 28px auto; padding: 0 12px; }\n',
'    .card { background: var(--bg); border-radius: 16px; padding: 22px; ',
'            box-shadow: 0 10px 20px rgba(0,0,0,.20); overflow: hidden; }\n',
'    h1 { margin: 0 0 16px; font-weight: 700; text-align:center; }\n',
'    .grid { width: 100%%; border-collapse: separate; border-spacing: 12px 12px; table-layout: fixed; }\n',
'    .grid td { width: 33.33%%; text-align:center; }\n',
'    thead th { text-align: center; font-weight: 600; font-size: 18px; padding: 6px 2px 8px; }\n',
'    tbody td { vertical-align: top; }\n',
'    .cell { display:flex; justify-content:center; align-items:center; gap:10px; flex-wrap:wrap; }\n',
'    /* Centering container specifically for TNF/Sunday/MNF */\n',
'    .tnf-row { display:flex; justify-content:center; gap:8px; flex-wrap:wrap; width:100%%; }\n',
'    a.btn { display:inline-block; background:var(--btn); color:#fff; text-decoration:none; ',
'            padding:8px 12px; border-radius:12px; line-height:1.15; text-align:center; ',
'            box-shadow:0 2px 6px rgba(0,0,0,.25); transition:transform .05s ease-in-out; ',
'            max-width:100%%; word-break: normal; overflow-wrap: anywhere; font-size:16px; }\n',
'    a.btn-tight { padding:5px 9px; font-size:14px; border-radius:10px; white-space:nowrap; }\n',
'    a.btn-condensed { font-size:16px; }\n',
'    a.btn:hover { transform: translateY(-1px); }\n',
'    @media (max-width: 600px){\n',
'      h1 { font-size:26px; }\n',
'      thead th { font-size:15px; }\n',
'      .grid { border-spacing: 10px 10px; }\n',
'      a.btn { font-size:12.5px; padding:6px 9px; border-radius:9px; }\n',
'      a.btn-tight { font-size:12px; padding:4px 7px; }\n',
'      a.btn-condensed { font-size:11.5px; padding:6px 8px; }\n',
'      .tnf-row { justify-content:center; gap:6px; }\n',
'    }\n',
'  </style>\n',
'</head>\n',
'<body>\n',
'  <div class="wrap">\n',
'    <div class="card">\n',
'      <h1>Explore Articles by Nathan Jahnke</h1>\n',
'      <table class="grid">\n',
'        <thead>\n',
'          <tr><th>Recaps</th><th>Rankings</th><th>Looking Ahead</th></tr>\n',
'        </thead>\n',
'        <tbody>\n',
'          %s\n',
'        </tbody>\n',
'      </table>\n',
'    </div>\n',
'  </div>\n',
'</body>\n',
'</html>\n'
)
html <- sprintf(tpl, body_rows)
out_file <- normalizePath(out_file, winslash = "/", mustWork = FALSE)
dir.create(dirname(out_file), recursive = TRUE, showWarnings = FALSE)
con <- file(out_file, open = "wb")
on.exit(try(close(con), silent = TRUE), add = TRUE)
writeBin(charToRaw(enc2utf8(html)), con)
flush(con)
message("Wrote: ", out_file)
if (open_after) try(utils::browseURL(out_file), silent = TRUE)
invisible(out_file)
}
render_articles_page(
links,
out_file = "nathan_articles.html",
open_after = TRUE
)
gert::git_add(".") # stage everything
gert::git_commit("Update HTML") # commit staged files
gert::git_push(remote = "origin")
source("/home/nathan/Dropbox/901_functions/Custom header.R")
setwd("~/html_tests")
library(htmltools)
library(dplyr)
library(purrr)
library(stringr)
url <-
"https://docs.google.com/spreadsheets/d/1-MdK6rWC8nepp0fNUWNIrUs-e7JN9Z2z2w7oXzl4uuQ/edit?gid=0#gid=0"
links <- read_sheet(url, sheet = "links")
# --- helper (unchanged) -----------------------------------------------------
# tighter chips for TNF / Sunday / MNF
link_btn <- function(title, url) {
t <- tolower(trimws(title))
cls <- "btn"
if (t %in% c("tnf", "sunday", "mnf")) cls <- paste(cls, "btn-tight")
if (t %in% c("usage & production", "college usage & production"))
cls <- paste(cls, "btn-condensed")
sprintf(
'<a class="%s" href="%s" target="_blank" rel="noopener">%s</a>',
cls,
url,
title
)
}
# --- renderer (updated CSS + wrapper) ---------------------------------------
render_articles_page <- function(
links,
out_file = "nathan_articles.html",
open_after = TRUE
) {
stopifnot(all(c("article", "url") %in% names(links)))
norm_key <- function(s) tolower(gsub("[^a-z0-9]", "", s))
alias_map <- c("5 to Add/Drop/Buy/Sell" = "5 5 5 5")
lk <- links
lk$.key <- norm_key(lk$article)
url_for <- function(display_title) {
actual <- if (display_title %in% names(alias_map))
alias_map[[display_title]] else display_title
k <- norm_key(actual)
hit <- lk[lk$.key == k, , drop = FALSE]
if (nrow(hit) == 0) return("#")
hit$url[[1]]
}
btn_for <- function(title) link_btn(title, url_for(title))
btn_row <- function(v) paste(vapply(v, btn_for, ""), collapse = " ")
# helper to fetch a URL by exact article title
url_for <- function(title) {
hit <- links$url[match(title, links$article)]
if (is.na(hit)) "#" else hit
}
cell_r1_c1 <- paste0(
'<div class="tnf-row">',
link_btn("TNF", url_for("TNF")),
link_btn("Sunday", url_for("Sunday")),
link_btn("MNF", url_for("MNF")),
'</div>'
)
cell_r1_c2 <- btn_for("Weekly")
cell_r1_c3 <- btn_for("Waivers")
cell_r2_c1 <- btn_for("Usage & Production")
cell_r2_c2 <- btn_for("Rest of Season")
cell_r2_c3 <- btn_for("5 to Add/Drop/Buy/Sell")
cell_r3_c1 <- btn_for("College Usage & Production")
cell_r3_c2 <- btn_for("Dynasty")
cell_r3_c3 <- btn_for("Start/Sit")
body_rows <- paste(
sprintf(
"<tr><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td></tr>",
cell_r1_c1,
cell_r1_c2,
cell_r1_c3
),
sprintf(
"<tr><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td></tr>",
cell_r2_c1,
cell_r2_c2,
cell_r2_c3
),
sprintf(
"<tr><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td><td><div class='cell'>%s</div></td></tr>",
cell_r3_c1,
cell_r3_c2,
cell_r3_c3
),
sep = "\n"
)
tpl <- paste0(
'<!doctype html>\n',
'<html lang="en">\n',
'<head>\n',
'  <meta charset="utf-8">\n',
'  <title>Explore Articles by Nathan Jahnke</title>\n',
'  <meta name="viewport" content="width=device-width, initial-scale=1">\n',
'  <link rel="preconnect" href="https://fonts.googleapis.com">\n',
'  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>\n',
'  <link href="https://fonts.googleapis.com/css2?family=Archivo:wght@400;600;700&display=swap" rel="stylesheet">\n',
'  <style>\n',
'    :root { --bg:#0b1530; --btn:#1677ff; --txt:#ffffff; }\n',
"    body, table { font-family: 'Archivo', sans-serif; }\n",
'    body { background: transparent; color: var(--txt); margin: 0; }\n',
'    .wrap { max-width: 1100px; margin: 28px auto; padding: 0 12px; }\n',
'    .card { background: var(--bg); border-radius: 16px; padding: 22px; ',
'            box-shadow: 0 10px 20px rgba(0,0,0,.20); overflow: hidden; }\n',
'    h1 { margin: 0 0 16px; font-weight: 700; text-align:center; }\n',
'    .grid { width: 100%%; border-collapse: separate; border-spacing: 12px 12px; table-layout: fixed; }\n',
'    .grid td { width: 33.33%%; text-align:center; }\n',
'    thead th { text-align: center; font-weight: 600; font-size: 18px; padding: 6px 2px 8px; }\n',
'    tbody td { vertical-align: top; }\n',
'    .cell { display:flex; justify-content:center; align-items:center; gap:10px; flex-wrap:wrap; }\n',
'    /* Centering container specifically for TNF/Sunday/MNF */\n',
'    .tnf-row { display:flex; justify-content:center; gap:8px; flex-wrap:wrap; width:100%%; }\n',
'    a.btn { display:inline-block; background:var(--btn); color:#fff; text-decoration:none; ',
'            padding:8px 12px; border-radius:12px; line-height:1.15; text-align:center; ',
'            box-shadow:0 2px 6px rgba(0,0,0,.25); transition:transform .05s ease-in-out; ',
'            max-width:100%%; word-break: normal; overflow-wrap: anywhere; font-size:16px; }\n',
'    a.btn-tight { padding:5px 9px; font-size:14px; border-radius:10px; white-space:nowrap; }\n',
'    a.btn-condensed { font-size:16px; }\n',
'    a.btn:hover { transform: translateY(-1px); }\n',
'    @media (max-width: 600px){\n',
'      h1 { font-size:26px; }\n',
'      thead th { font-size:15px; }\n',
'      .grid { border-spacing: 10px 10px; }\n',
'      a.btn { font-size:12.5px; padding:6px 9px; border-radius:9px; }\n',
'      a.btn-tight { font-size:12px; padding:4px 7px; }\n',
'      a.btn-condensed { font-size:10.6px; padding:5px 7px; line-height:1.05; }\n',
'      .tnf-row { justify-content:center; gap:6px; }\n',
'    }\n',
'  </style>\n',
'</head>\n',
'<body>\n',
'  <div class="wrap">\n',
'    <div class="card">\n',
'      <h1>Explore Articles by Nathan Jahnke</h1>\n',
'      <table class="grid">\n',
'        <thead>\n',
'          <tr><th>Recaps</th><th>Rankings</th><th>Looking Ahead</th></tr>\n',
'        </thead>\n',
'        <tbody>\n',
'          %s\n',
'        </tbody>\n',
'      </table>\n',
'    </div>\n',
'  </div>\n',
'</body>\n',
'</html>\n'
)
html <- sprintf(tpl, body_rows)
out_file <- normalizePath(out_file, winslash = "/", mustWork = FALSE)
dir.create(dirname(out_file), recursive = TRUE, showWarnings = FALSE)
con <- file(out_file, open = "wb")
on.exit(try(close(con), silent = TRUE), add = TRUE)
writeBin(charToRaw(enc2utf8(html)), con)
flush(con)
message("Wrote: ", out_file)
if (open_after) try(utils::browseURL(out_file), silent = TRUE)
invisible(out_file)
}
render_articles_page(
links,
out_file = "nathan_articles.html",
open_after = TRUE
)
gert::git_add(".") # stage everything
gert::git_commit("Update HTML") # commit staged files
gert::git_push(remote = "origin")
