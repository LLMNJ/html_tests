arrange(.data[[position_col]], .data[[rank_col]], pos_tier) %>%
slice(1) %>%
ungroup() %>%
arrange(.data[[rank_col]]) %>%
select(
-cum_rank,
-cum_count,
-count,
-.data[[rank_col]],
-.data[[position_col]]
) %>%
rename(TIER = pos_tier)
data_processed <- left_join(x = data_processed, y = bullets1, by = "PFF_ID")
data_processed <- left_join(x = data_processed, y = bullets2, by = "PFF_ID")
data_processed <- left_join(x = data_processed, y = bullets3, by = "PFF_ID")
data_processed$BULLET1 <- ifelse(
is.na(data_processed$BULLET1),
"",
data_processed$BULLET1
)
data_processed$BULLET2 <- ifelse(
is.na(data_processed$BULLET2),
"",
data_processed$BULLET2
)
data_processed$BULLET3 <- ifelse(
is.na(data_processed$BULLET3),
"",
data_processed$BULLET3
)
data_processed[] <- lapply(
data_processed,
function(x) gsub("[[:space:]]", " ", x)
)
return(data_processed)
}
#This is to get the players table with rankings from the input .
url <-
"https://docs.google.com/spreadsheets/d/1KbwN3IDUxRzDx9vCMz2Xe4o3eQj7574wFCbW8VrdeFw/edit#gid=1689603038"
players <- read_sheet(url, sheet = "players")
shares <- read_sheet(url, sheet = "projections")
bullets <- read_sheet(url, sheet = "content")
bullets$pff_player_identifier <- as.character(bullets$pff_player_identifier)
bullets1 <- select(bullets, pff_player_identifier, first_bullet)
bullets2 <- select(bullets, pff_player_identifier, second_bullet)
bullets3 <- select(bullets, pff_player_identifier, third_bullet)
colnames(bullets1) <- c("PFF_ID", "BULLET1")
colnames(bullets2) <- c("PFF_ID", "BULLET2")
colnames(bullets3) <- c("PFF_ID", "BULLET3")
players$pff_player_identifier <- as.character(players$pff_player_identifier)
players$name <- ifelse(
players$position == 'DEF',
paste(players$current_team, " DST", sep = ""),
players$name
)
names(players)[names(players) == "pff_player_identifier"] <- "pff_id"
names(players)[names(players) == "current_team"] <- "team"
#This is for in season rankings
shares_week_ppr <- shares %>%
select(position, week_ppr_proj) %>%
group_by(position) %>%
mutate(w_ppr_rank = dplyr::row_number(dplyr::desc(week_ppr_proj))) %>%
ungroup()
shares_week_half <- shares %>%
select(position, week_half_proj) %>%
group_by(position) %>%
mutate(week_rank = dplyr::row_number(dplyr::desc(week_half_proj))) %>%
ungroup()
shares_week_standard <- shares %>%
select(position, week_standard_proj) %>%
group_by(position) %>%
mutate(
w_standard_rank = dplyr::row_number(dplyr::desc(week_standard_proj))
) %>%
ungroup()
week_ppr <- players %>%
filter(
(players$position == 'QB' & w_ppr_rank <= number_games * 2) |
(players$position == 'RB' & w_ppr_rank <= 85) |
(players$position == 'WR' & w_ppr_rank <= 115) |
(players$position == 'TE' & w_ppr_rank <= 50)
) %>%
select(pff_id, position, name, team, w_ppr_rank) %>%
mutate(week_id = current_week_input) %>%
inner_join(shares_week_ppr, by = c("position", "w_ppr_rank")) %>%
arrange(desc(week_ppr_proj)) %>%
select(-w_ppr_rank, -week_ppr_proj)
article <- players %>%
filter(
(position == 'QB' & w_ppr_rank <= number_games * 2) |
(position == 'RB' & w_ppr_rank <= 85) |
(position == 'WR' & w_ppr_rank <= 115) |
(position == 'TE' & w_ppr_rank <= 50) |
(position == 'K' & w_ppr_rank <= number_games * 2) |
(position == 'DEF' & w_ppr_rank <= number_games * 2)
) %>%
select(
position,
name,
team,
w_ppr_rank,
opponent,
start_time_est,
home_away,
injury,
injury_status,
pff_player_url,
team_url,
opponent_url
) %>%
left_join(shares_week_ppr, by = c("position", "w_ppr_rank")) %>%
arrange(desc(week_ppr_proj)) %>%
mutate(
overall_rank = if_else(
position %in% c('QB', 'RB', 'WR', 'TE'),
as.character(cumsum(position %in% c('QB', 'RB', 'WR', 'TE'))),
""
)
) %>%
rename(position_rank = w_ppr_rank) %>%
select(
overall_rank,
position_rank,
position,
name,
team,
everything(),
-week_ppr_proj
)
week_half <- players %>%
filter(
(players$position == 'QB' & week_rank <= number_games * 2) |
(players$position == 'RB' & week_rank <= 85) |
(players$position == 'WR' & week_rank <= 115) |
(players$position == 'TE' & week_rank <= 50)
) %>%
select(pff_id, position, name, team, week_rank) %>%
mutate(week_id = current_week_input) %>%
inner_join(shares_week_half, by = c("position", "week_rank")) %>%
arrange(desc(week_half_proj)) %>%
select(-week_rank, -week_half_proj)
week_standard <- players %>%
filter(
(players$position == 'QB' & w_standard_rank <= number_games * 2) |
(players$position == 'RB' & w_standard_rank <= 85) |
(players$position == 'WR' & w_standard_rank <= 115) |
(players$position == 'TE' & w_standard_rank <= 50)
) %>%
select(pff_id, position, name, team, w_standard_rank) %>%
mutate(week_id = current_week_input) %>%
inner_join(shares_week_standard, by = c("position", "w_standard_rank")) %>%
arrange(desc(week_standard_proj)) %>%
select(-w_standard_rank, -week_standard_proj)
week_k <- players %>%
filter(players$position == 'K') %>%
select(pff_id, position, name, team, week_rank) %>%
mutate(week_id = current_week_input) %>%
arrange(week_rank) %>%
slice_head(n = number_games * 2) %>%
select(-week_rank)
week_def <- players %>%
filter(players$position == 'DEF') %>%
select(pff_id, position, name, team, week_rank) %>%
mutate(
week_id = current_week_input,
pff_id = sub("^pff-team-", "", as.character(pff_id))
) %>%
arrange(week_rank) %>%
slice_head(n = number_games * 2) %>%
select(-week_rank)
creds <- jsonlite::fromJSON(
txt = glue::glue("/home/nathan/aws_creds_consumer.json")
)
Sys.setenv("AWS_ACCESS_KEY_ID" = creds$AccessKeyId)
Sys.setenv("AWS_SECRET_ACCESS_KEY" = creds$SecretAccessKey)
Sys.setenv("AWS_SESSION_TOKEN" = creds$SessionToken)
Sys.setenv("AWS_DEFAULT_REGION" = "us-east-2")
temp_file3 <- tempfile(fileext = ".csv")
write.csv(week_ppr, temp_file3, row.names = FALSE)
put_object(
file = temp_file3,
object = "fantasy/season/rankings/ppr.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
temp_file4 <- tempfile(fileext = ".csv")
write.csv(week_half, temp_file4, row.names = FALSE)
put_object(
file = temp_file4,
object = "fantasy/season/rankings/half-ppr.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
temp_file5 <- tempfile(fileext = ".csv")
write.csv(week_standard, temp_file5, row.names = FALSE)
put_object(
file = temp_file5,
object = "fantasy/season/rankings/non-ppr.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
temp_file6 <- tempfile(fileext = ".csv")
write.csv(week_k, temp_file6, row.names = FALSE)
put_object(
file = temp_file6,
object = "fantasy/season/rankings/k.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
temp_file7 <- tempfile(fileext = ".csv")
write.csv(week_def, temp_file7, row.names = FALSE)
put_object(
file = temp_file7,
object = "fantasy/season/rankings/d.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
#This is for draft rankings
names(players)[names(players) == "pff_id"] <- "PFF_ID"
names(players)[names(players) == "team"] <- "TEAM"
names(players)[names(players) == "name"] <- "NAME"
tiers <- players %>%
group_by(position, pos_tier) %>%
summarise(count = n())
tiers <- tiers %>%
arrange(position, pos_tier) %>%
group_by(position) %>%
mutate(cum_count = cumsum(count))
ppr <- select(players, PFF_ID, NAME, TEAM, ppr_rank, position)
ppr <- process_table(ppr, tiers, max_rank = 192)
half <- select(players, PFF_ID, NAME, TEAM, half_rank, position)
half <- process_table(half, tiers, max_rank = 192)
non <- select(players, PFF_ID, NAME, TEAM, standard_rank, position)
non <- process_table(non, tiers, max_rank = 192)
super <- select(players, PFF_ID, NAME, TEAM, superflex_rank, position)
super <- process_table(super, tiers, max_rank = 192)
dyn <- select(players, PFF_ID, NAME, TEAM, dynasty_rank, position)
dyn <- process_table(dyn, tiers, max_rank = 150)
dynrok <- select(players, PFF_ID, NAME, TEAM, dynasty_rookie_rank, position)
dynrok <- process_table(dynrok, tiers, max_rank = 24)
dynsuper <- select(
players,
PFF_ID,
NAME,
TEAM,
dynasty_superflex_rank,
position
)
dynsuper <- process_table(dynsuper, tiers, max_rank = 150)
dynsuperrok <- select(
players,
PFF_ID,
NAME,
TEAM,
dynasty_superflex_rookie_rank,
position
)
dynsuperrok <- process_table(dynsuperrok, tiers, max_rank = 24)
best <- select(players, PFF_ID, NAME, TEAM, bestball_rank, position)
best <- process_table(best, tiers, max_rank = 150)
temp_file3 <- tempfile(fileext = ".csv")
write.csv(ppr, temp_file3, row.names = FALSE)
put_object(
file = temp_file3,
object = "fantasy/draft/rankings/redraft-ppr.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
temp_file4 <- tempfile(fileext = ".csv")
write.csv(half, temp_file4, row.names = FALSE)
put_object(
file = temp_file4,
object = "fantasy/draft/rankings/redraft-half-ppr.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
temp_file5 <- tempfile(fileext = ".csv")
write.csv(non, temp_file5, row.names = FALSE)
put_object(
file = temp_file5,
object = "fantasy/draft/rankings/redraft-non-ppr.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
temp_file6 <- tempfile(fileext = ".csv")
write.csv(super, temp_file6, row.names = FALSE)
put_object(
file = temp_file6,
object = "fantasy/draft/rankings/redraft-2qb-ppr.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
temp_file7 <- tempfile(fileext = ".csv")
write.csv(best, temp_file7, row.names = FALSE)
put_object(
file = temp_file7,
object = "fantasy/draft/rankings/best-ball.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
temp_file8 <- tempfile(fileext = ".csv")
write.csv(dyn, temp_file8, row.names = FALSE)
put_object(
file = temp_file8,
object = "fantasy/draft/rankings/dynasty-startup.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
temp_file9 <- tempfile(fileext = ".csv")
write.csv(dynrok, temp_file9, row.names = FALSE)
put_object(
file = temp_file9,
object = "fantasy/draft/rankings/dynasty-rookie.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
temp_file10 <- tempfile(fileext = ".csv")
write.csv(dynsuper, temp_file10, row.names = FALSE)
put_object(
file = temp_file10,
object = "fantasy/draft/rankings/dynasty-2qb-startup.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
temp_file11 <- tempfile(fileext = ".csv")
write.csv(dynsuperrok, temp_file11, row.names = FALSE)
put_object(
file = temp_file11,
object = "fantasy/draft/rankings/dynasty-2qb-rookie.csv",
bucket = "prod-ingestion-data-files",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
#This is to do stuff with shares
shares_by_week <- function(df, wk) {
# the static columns
static_cols <- c(
"team_abbreviation",
"position",
"pff_player_identifier",
"name"
)
# the week‐specific prefixes
prefixes <- c(
"pass",
"carry",
"target",
"kick_return",
"punt_return",
"kicking"
)
# build the full set of column names
week_cols <- paste0(prefixes, "_", wk)
cols_to_select <- c(static_cols, week_cols)
# select and add the week column
df <- df %>%
select(all_of(cols_to_select)) %>%
mutate(week = wk)
colnames(df) <- c(
"team",
"position",
"player_id",
'player',
"pass",
"carry",
"target",
"kick_return",
"punt_return",
"kicking",
"week"
)
df$pos_rank <- 1
df$role <- 1
df <- select(
df,
team,
position,
player_id,
player,
week,
pass,
carry,
target,
kick_return,
punt_return,
kicking,
pos_rank,
role
)
df
}
# your vector of weeks
weeks <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)
# apply and bind in one go
shares <- map_dfr(weeks, ~ shares_by_week(shares, .x))
shares <- filter(
shares,
shares$pass +
shares$carry +
shares$target +
shares$kick_return +
shares$punt_return +
shares$kicking >
0
)
shares <- filter(shares, shares$week >= current_week_input) #usually >=
shares <- shares %>%
arrange(week, team, position, player)
creds <- jsonlite::fromJSON(
txt = glue::glue("/home/nathan/aws_creds_b2b.json")
)
Sys.setenv("AWS_ACCESS_KEY_ID" = creds$AccessKeyId)
Sys.setenv("AWS_SECRET_ACCESS_KEY" = creds$SecretAccessKey)
Sys.setenv("AWS_SESSION_TOKEN" = creds$SessionToken)
Sys.setenv("AWS_DEFAULT_REGION" = "us-east-2")
pff <-
get_object(
bucket = "pff-cfn-production-ml",
object = "fantasy_rd/fantasy_shares.csv"
) %>%
rawToChar() %>%
textConnection() %>%
read.csv(stringsAsFactors = F)
temp_file <- tempfile(fileext = ".csv")
write.csv(shares, temp_file, row.names = FALSE)
put_object(
file = temp_file,
object = "fantasy_rd/fantasy_shares.csv",
bucket = "pff-cfn-production-ml",
headers = c('x-amz-server-side-encryption' = 'AES256')
)
#This is for IDP shares
#url <-
#  "https://docs.google.com/spreadsheets/d/1uGMqxljYSslowyChXRt3o_z8hU-1ARXcINpPCYwyO2A/edit#gid=839179721"
#idp <- read_sheet(url, sheet = "fantasy_shares")
#idp <- select(idp, week, player, player_id, team, position, FF_position, pass, run, pos_rank, role)
#temp_file2 <- tempfile(fileext = ".csv")
#write.csv(idp, temp_file2, row.names = FALSE)
#put_object(
#  file = temp_file2,
#  object = "fantasy_rd/fantasy_shares_IDP.csv",
#  bucket = "pff-cfn-production-ml",
#  headers = c('x-amz-server-side-encryption' = 'AES256')
#)
source(
"/home/nathan/Dropbox/403_article_creation/code/weekly_rankings_creation.R"
)
source(
"/home/nathan/Dropbox/403_article_creation/code/rest_of_season_rankings_creation.R"
)
Sys.sleep(120)
source("/home/nathan/Dropbox/401_fantasy/update_off_season_projections.R")
rm(
best,
bullets,
bullets1,
bullets2,
bullets3,
dyn,
dynrok,
dynsuper,
dynsuperrok,
half,
idp,
non,
pff,
players,
ppr,
share_exceptions,
shares,
super,
tiers
)
rm(
temp_file,
temp_file3,
temp_file4,
temp_file5,
temp_file6,
temp_file7,
temp_file8,
temp_file9,
temp_file10,
temp_file11,
creds,
weeks,
shares_by_week
)
rm(
process_table,
shares_week_half,
shares_week_ppr,
shares_week_standard,
week_def,
week_half,
week_k,
week_ppr,
week_standard,
current_week_input,
number_games
)
rm(
article,
csv_filename,
current_season_input,
file_name,
html_lines,
last_updated_text,
rows,
table_title,
tbody_html
)
source("/home/nathan/Dropbox/901_functions/Custom footer.R")
